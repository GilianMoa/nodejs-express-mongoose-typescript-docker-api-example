{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Demo App API",
    "description": "NodeJS app written in typescript, uses Express and MongoDB, deployed with Docker",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost:8888",
  "basePath": "/api",
  "tags": [
    {
      "name": "Users",
      "description": "API for users in the system"
    },
    {
      "name": "Courses",
      "description": "API for courses in the system"
    },
    {
      "name": "Authors",
      "description": "API for authors in the system"
    },
    {
      "name": "Auth",
      "description": "API for auth token"
    }
  ],
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/users": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Create new user in system",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User that we want to create",
            "schema": {
              "$ref": "#/definitions/UserModel"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "New user is created",
            "schema": {
              "$ref": "#/definitions/UserResponseModel"
            }
          }
        }
      }
    },
    "/users/me": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Get logged user",
        "parameters": [
          {
            "in": "header",
            "name": "x-auth-token",
            "description": "JWT token",
            "schema": {
              "type": "string",
              "format": "JWT"
            },
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Logged user",
            "schema": {
              "$ref": "#/definitions/UserResponseModel"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "UserModel": {
      "required": [
        "name",
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string",
          "uniqueItems": true
        },
        "password": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "UserResponseModel": {
      "properties": {
        "_id": {
          "type": "string",
          "uniqueItems": true
        },
        "email": {
          "type": "string",
          "uniqueItems": true
        },
        "name": {
          "type": "string"
        }
      }
    }
  }
}
